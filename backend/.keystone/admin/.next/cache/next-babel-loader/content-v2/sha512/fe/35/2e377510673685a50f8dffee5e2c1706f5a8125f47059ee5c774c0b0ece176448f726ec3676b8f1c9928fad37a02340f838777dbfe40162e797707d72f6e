{"ast":null,"code":"import { createAuth } from '@keystone-next/auth';\nimport { config, createSchema } from '@keystone-next/keystone/schema';\nimport { statelessSessions } from '@keystone-next/keystone/session';\nimport { permissionsList } from './schemas/fields';\nimport { Role } from './schemas/Role'; // import { OrderItem } from './schemas/OrderItem';\n// import { Order } from './schemas/Order';\n// import { CartItem } from './schemas/CartItem';\n// import { ProductImage } from './schemas/ProductImage';\n// import { Product } from './schemas/Product';\n\nimport { Roti } from './schemas/Roti';\nimport { Vote } from './schemas/Vote';\nimport { User } from './schemas/User';\nimport 'dotenv/config';\nimport { insertSeedData } from './seed-data';\nimport { sendPasswordResetEmail } from './lib/mail'; //import { extendGraphqlSchema } from './mutations';\n\nconst databaseURL = process.env.DATABASE_URL || 'file:./keystone.db';\nconst sessionConfig = {\n  maxAge: 60 * 60 * 24 * 360,\n  // How long they stay signed in?\n  secret: process.env.COOKIE_SECRET || 'this secret should only be used in testing'\n};\nconst {\n  withAuth\n} = createAuth({\n  listKey: 'User',\n  identityField: 'email',\n  secretField: 'password',\n  initFirstItem: {\n    fields: ['name', 'email', 'password'] // TODO: Add in inital roles here\n\n  },\n  passwordResetLink: {\n    async sendToken(args) {\n      // send the email\n      await sendPasswordResetEmail(args.token, args.identity);\n    }\n\n  },\n  sessionData: `id name email role { ${permissionsList.join(' ')} }`\n});\nexport default withAuth(config({\n  // @ts-ignore\n  server: {\n    cors: {\n      origin: [process.env.FRONTEND_URL],\n      credentials: true\n    }\n  },\n  db: process.env.DATABASE_URL ? {\n    provider: 'postgresql',\n    url: process.env.DATABASE_URL\n  } : {\n    // provider: 'sqlite',\n    // url: databaseURL,\n    provider: 'postgresql',\n    url: 'postgresql://postgres:mQHM64%Q@postgredb-1.cn4e9mtddv9n.eu-west-1.rds.amazonaws.com:5432/keystone-e2',\n\n    async onConnect(context) {\n      console.log('Connected to the database!');\n\n      if (process.argv.includes('--seed-data')) {\n        await insertSeedData(context);\n      }\n    }\n\n  },\n  lists: createSchema({\n    // Schema items go in here\n    User,\n    Roti,\n    Vote,\n    // Product,\n    // ProductImage,\n    // CartItem,\n    // OrderItem,\n    // Order,\n    Role\n  }),\n  // extendGraphqlSchema,\n  // ui: {\n  //   // Show the UI only for poeple who pass this test\n  //   isAccessAllowed: ({ session }) =>\n  //     // console.log(session);\n  //     !!session?.data,\n  // },\n  session: statelessSessions(sessionConfig)\n}));","map":null,"metadata":{},"sourceType":"module"}